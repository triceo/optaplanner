{
  "filters": {
    "revapi": {
      "filter": {
        "elements": {
          "exclude": [
            "method .* org\\.optaplanner\\.core\\.config.*::(?!(set|get)).*",
            "parameter .* org\\.optaplanner\\.core\\.config.*::(?!(set|get)).*"
          ]
        }
      },
      "java": {
        "filter": {
          "packages": {
            "comment": "We don't want to check transitive classes, since we already check them in their own module.",
            "regex": true,
            "include": [
              "org\\.optaplanner\\.core\\.api.*",
              "org\\.optaplanner\\.core\\.config.*"
            ]
          }
        }
      }
    }
  },
  "ignores": {
    "revapi": {
      "_comment": "Changes between 7.33.0.Final and the current branch. These changes are desired and thus ignored.",
      "ignore": [
        {
          "code": "java.annotation.added",
          "old": "class org.optaplanner.core.config.AbstractConfig<C extends org.optaplanner.core.config.AbstractConfig>",
          "new": "class org.optaplanner.core.config.AbstractConfig<C extends org.optaplanner.core.config.AbstractConfig>",
          "annotationType": "javax.xml.bind.annotation.XmlAccessorType",
          "annotation": "@javax.xml.bind.annotation.XmlAccessorType(javax.xml.bind.annotation.XmlAccessType.FIELD)",
          "package": "org.optaplanner.core.config",
          "classSimpleName": "AbstractConfig",
          "elementKind": "class",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.entityPlacerConfigList",
          "new": "field org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.entityPlacerConfigList",
          "annotationType": "javax.xml.bind.annotation.XmlElements",
          "annotation": "@javax.xml.bind.annotation.XmlElements({@javax.xml.bind.annotation.XmlElement(name = \"queuedEntityPlacer\", type = org.optaplanner.core.config.constructionheuristic.placer.QueuedEntityPlacerConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"queuedValuePlacer\", type = org.optaplanner.core.config.constructionheuristic.placer.QueuedValuePlacerConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"pooledEntityPlacer\", type = org.optaplanner.core.config.constructionheuristic.placer.PooledEntityPlacerConfig.class)})",
          "package": "org.optaplanner.core.config.constructionheuristic",
          "classSimpleName": "ConstructionHeuristicPhaseConfig",
          "fieldName": "entityPlacerConfigList",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.foragerConfig",
          "new": "field org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.foragerConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"forager\")",
          "package": "org.optaplanner.core.config.constructionheuristic",
          "classSimpleName": "ConstructionHeuristicPhaseConfig",
          "fieldName": "foragerConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.moveSelectorConfigList",
          "new": "field org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.moveSelectorConfigList",
          "annotationType": "javax.xml.bind.annotation.XmlElements",
          "annotation": "@javax.xml.bind.annotation.XmlElements({@javax.xml.bind.annotation.XmlElement(name = \"cartesianProductMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.composite.CartesianProductMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"changeMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.ChangeMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"kOptMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.chained.KOptMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"moveIteratorFactory\", type = org.optaplanner.core.config.heuristic.selector.move.factory.MoveIteratorFactoryConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"moveListFactory\", type = org.optaplanner.core.config.heuristic.selector.move.factory.MoveListFactoryConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"pillarChangeMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.PillarChangeMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"pillarSwapMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.PillarSwapMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"subChainChangeMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.chained.SubChainChangeMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"subChainSwapMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.chained.SubChainSwapMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"swapMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.SwapMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"tailChainSwapMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.chained.TailChainSwapMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"unionMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.composite.UnionMoveSelectorConfig.class)})",
          "package": "org.optaplanner.core.config.constructionheuristic",
          "classSimpleName": "ConstructionHeuristicPhaseConfig",
          "fieldName": "moveSelectorConfigList",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicType",
          "new": "enum org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.constructionheuristic",
          "classSimpleName": "ConstructionHeuristicType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.constructionheuristic.decider.forager.ConstructionHeuristicPickEarlyType",
          "new": "enum org.optaplanner.core.config.constructionheuristic.decider.forager.ConstructionHeuristicPickEarlyType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.constructionheuristic.decider.forager",
          "classSimpleName": "ConstructionHeuristicPickEarlyType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "class org.optaplanner.core.config.constructionheuristic.placer.EntityPlacerConfig<C extends org.optaplanner.core.config.constructionheuristic.placer.EntityPlacerConfig>",
          "new": "class org.optaplanner.core.config.constructionheuristic.placer.EntityPlacerConfig<C extends org.optaplanner.core.config.constructionheuristic.placer.EntityPlacerConfig>",
          "annotationType": "javax.xml.bind.annotation.XmlSeeAlso",
          "annotation": "@javax.xml.bind.annotation.XmlSeeAlso({org.optaplanner.core.config.constructionheuristic.placer.QueuedEntityPlacerConfig.class, org.optaplanner.core.config.constructionheuristic.placer.QueuedValuePlacerConfig.class, org.optaplanner.core.config.constructionheuristic.placer.PooledEntityPlacerConfig.class})",
          "package": "org.optaplanner.core.config.constructionheuristic.placer",
          "classSimpleName": "EntityPlacerConfig",
          "elementKind": "class",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.constructionheuristic.placer.QueuedEntityPlacerConfig.entitySelectorConfig",
          "new": "field org.optaplanner.core.config.constructionheuristic.placer.QueuedEntityPlacerConfig.entitySelectorConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"entitySelector\")",
          "package": "org.optaplanner.core.config.constructionheuristic.placer",
          "classSimpleName": "QueuedEntityPlacerConfig",
          "fieldName": "entitySelectorConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.constructionheuristic.placer.QueuedEntityPlacerConfig.moveSelectorConfigList",
          "new": "field org.optaplanner.core.config.constructionheuristic.placer.QueuedEntityPlacerConfig.moveSelectorConfigList",
          "annotationType": "javax.xml.bind.annotation.XmlElements",
          "annotation": "@javax.xml.bind.annotation.XmlElements({@javax.xml.bind.annotation.XmlElement(name = \"cartesianProductMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.composite.CartesianProductMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"changeMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.ChangeMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"kOptMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.chained.KOptMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"moveIteratorFactory\", type = org.optaplanner.core.config.heuristic.selector.move.factory.MoveIteratorFactoryConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"moveListFactory\", type = org.optaplanner.core.config.heuristic.selector.move.factory.MoveListFactoryConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"pillarChangeMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.PillarChangeMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"pillarSwapMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.PillarSwapMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"subChainChangeMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.chained.SubChainChangeMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"subChainSwapMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.chained.SubChainSwapMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"swapMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.SwapMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"tailChainSwapMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.chained.TailChainSwapMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"unionMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.composite.UnionMoveSelectorConfig.class)})",
          "package": "org.optaplanner.core.config.constructionheuristic.placer",
          "classSimpleName": "QueuedEntityPlacerConfig",
          "fieldName": "moveSelectorConfigList",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.constructionheuristic.placer.QueuedValuePlacerConfig.valueSelectorConfig",
          "new": "field org.optaplanner.core.config.constructionheuristic.placer.QueuedValuePlacerConfig.valueSelectorConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"valueSelector\")",
          "package": "org.optaplanner.core.config.constructionheuristic.placer",
          "classSimpleName": "QueuedValuePlacerConfig",
          "fieldName": "valueSelectorConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchPhaseConfig.entitySelectorConfig",
          "new": "field org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchPhaseConfig.entitySelectorConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"entitySelector\")",
          "package": "org.optaplanner.core.config.exhaustivesearch",
          "classSimpleName": "ExhaustiveSearchPhaseConfig",
          "fieldName": "entitySelectorConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchPhaseConfig.moveSelectorConfig",
          "new": "field org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchPhaseConfig.moveSelectorConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElements",
          "annotation": "@javax.xml.bind.annotation.XmlElements({@javax.xml.bind.annotation.XmlElement(name = \"cartesianProductMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.composite.CartesianProductMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"changeMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.ChangeMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"kOptMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.chained.KOptMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"moveIteratorFactory\", type = org.optaplanner.core.config.heuristic.selector.move.factory.MoveIteratorFactoryConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"moveListFactory\", type = org.optaplanner.core.config.heuristic.selector.move.factory.MoveListFactoryConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"pillarChangeMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.PillarChangeMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"pillarSwapMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.PillarSwapMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"subChainChangeMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.chained.SubChainChangeMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"subChainSwapMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.chained.SubChainSwapMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"swapMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.SwapMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"tailChainSwapMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.chained.TailChainSwapMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"unionMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.composite.UnionMoveSelectorConfig.class)})",
          "package": "org.optaplanner.core.config.exhaustivesearch",
          "classSimpleName": "ExhaustiveSearchPhaseConfig",
          "fieldName": "moveSelectorConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchType",
          "new": "enum org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.exhaustivesearch",
          "classSimpleName": "ExhaustiveSearchType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.exhaustivesearch.NodeExplorationType",
          "new": "enum org.optaplanner.core.config.exhaustivesearch.NodeExplorationType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.exhaustivesearch",
          "classSimpleName": "NodeExplorationType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.heuristic.selector.common.SelectionCacheType",
          "new": "enum org.optaplanner.core.config.heuristic.selector.common.SelectionCacheType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.heuristic.selector.common",
          "classSimpleName": "SelectionCacheType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.heuristic.selector.common.SelectionOrder",
          "new": "enum org.optaplanner.core.config.heuristic.selector.common.SelectionOrder",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.heuristic.selector.common",
          "classSimpleName": "SelectionOrder",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.heuristic.selector.common.decorator.SelectionSorterOrder",
          "new": "enum org.optaplanner.core.config.heuristic.selector.common.decorator.SelectionSorterOrder",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.heuristic.selector.common.decorator",
          "classSimpleName": "SelectionSorterOrder",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.common.nearby.NearbySelectionConfig.originEntitySelectorConfig",
          "new": "field org.optaplanner.core.config.heuristic.selector.common.nearby.NearbySelectionConfig.originEntitySelectorConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"originEntitySelector\")",
          "package": "org.optaplanner.core.config.heuristic.selector.common.nearby",
          "classSimpleName": "NearbySelectionConfig",
          "fieldName": "originEntitySelectorConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.heuristic.selector.common.nearby.NearbySelectionDistributionType",
          "new": "enum org.optaplanner.core.config.heuristic.selector.common.nearby.NearbySelectionDistributionType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.heuristic.selector.common.nearby",
          "classSimpleName": "NearbySelectionDistributionType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.field.removed",
          "old": "field org.optaplanner.core.config.heuristic.selector.entity.EntitySelectorConfig.filterClassList",
          "package": "org.optaplanner.core.config.heuristic.selector.entity",
          "classSimpleName": "EntitySelectorConfig",
          "fieldName": "filterClassList",
          "elementKind": "field",
          "justification": "OptaPlanner now support only a single selection filter class."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.entity.EntitySelectorConfig.id",
          "new": "field org.optaplanner.core.config.heuristic.selector.entity.EntitySelectorConfig.id",
          "annotationType": "javax.xml.bind.annotation.XmlAttribute",
          "annotation": "@javax.xml.bind.annotation.XmlAttribute",
          "package": "org.optaplanner.core.config.heuristic.selector.entity",
          "classSimpleName": "EntitySelectorConfig",
          "fieldName": "id",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.entity.EntitySelectorConfig.mimicSelectorRef",
          "new": "field org.optaplanner.core.config.heuristic.selector.entity.EntitySelectorConfig.mimicSelectorRef",
          "annotationType": "javax.xml.bind.annotation.XmlAttribute",
          "annotation": "@javax.xml.bind.annotation.XmlAttribute",
          "package": "org.optaplanner.core.config.heuristic.selector.entity",
          "classSimpleName": "EntitySelectorConfig",
          "fieldName": "mimicSelectorRef",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.entity.EntitySelectorConfig.nearbySelectionConfig",
          "new": "field org.optaplanner.core.config.heuristic.selector.entity.EntitySelectorConfig.nearbySelectionConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"nearbySelection\")",
          "package": "org.optaplanner.core.config.heuristic.selector.entity",
          "classSimpleName": "EntitySelectorConfig",
          "fieldName": "nearbySelectionConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.method.removed",
          "old": "method java.util.List<java.lang.Class<? extends org.optaplanner.core.impl.heuristic.selector.common.decorator.SelectionFilter>> org.optaplanner.core.config.heuristic.selector.entity.EntitySelectorConfig::getFilterClassList()",
          "package": "org.optaplanner.core.config.heuristic.selector.entity",
          "classSimpleName": "EntitySelectorConfig",
          "methodName": "getFilterClassList",
          "elementKind": "method",
          "justification": "OptaPlanner now support only a single selection filter class."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.config.heuristic.selector.entity.EntitySelectorConfig::setFilterClassList(java.util.List<java.lang.Class<? extends org.optaplanner.core.impl.heuristic.selector.common.decorator.SelectionFilter>>)",
          "package": "org.optaplanner.core.config.heuristic.selector.entity",
          "classSimpleName": "EntitySelectorConfig",
          "methodName": "setFilterClassList",
          "elementKind": "method",
          "justification": "OptaPlanner now support only a single selection filter class."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.heuristic.selector.entity.EntitySorterManner",
          "new": "enum org.optaplanner.core.config.heuristic.selector.entity.EntitySorterManner",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.heuristic.selector.entity",
          "classSimpleName": "EntitySorterManner",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.entity.pillar.PillarSelectorConfig.entitySelectorConfig",
          "new": "field org.optaplanner.core.config.heuristic.selector.entity.pillar.PillarSelectorConfig.entitySelectorConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"entitySelector\")",
          "package": "org.optaplanner.core.config.heuristic.selector.entity.pillar",
          "classSimpleName": "PillarSelectorConfig",
          "fieldName": "entitySelectorConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.field.removed",
          "old": "field org.optaplanner.core.config.heuristic.selector.move.MoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.MoveSelectorConfig>.filterClassList",
          "package": "org.optaplanner.core.config.heuristic.selector.move",
          "classSimpleName": "MoveSelectorConfig",
          "fieldName": "filterClassList",
          "elementKind": "field",
          "justification": "OptaPlanner now supports only a single selection filter class."
        },
        {
          "code": "java.method.removed",
          "old": "method java.util.List<java.lang.Class<? extends org.optaplanner.core.impl.heuristic.selector.common.decorator.SelectionFilter>> org.optaplanner.core.config.heuristic.selector.move.MoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.MoveSelectorConfig>::getFilterClassList()",
          "package": "org.optaplanner.core.config.heuristic.selector.move",
          "classSimpleName": "MoveSelectorConfig",
          "methodName": "getFilterClassList",
          "elementKind": "method",
          "justification": "OptaPlanner now supports only a single selection filter class."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.config.heuristic.selector.move.MoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.MoveSelectorConfig>::setFilterClassList(java.util.List<java.lang.Class<? extends org.optaplanner.core.impl.heuristic.selector.common.decorator.SelectionFilter>>)",
          "package": "org.optaplanner.core.config.heuristic.selector.move",
          "classSimpleName": "MoveSelectorConfig",
          "methodName": "setFilterClassList",
          "elementKind": "method",
          "justification": "OptaPlanner now supports only a single selection filter class."
        },
        {
          "code": "java.annotation.added",
          "old": "class org.optaplanner.core.config.heuristic.selector.move.MoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.MoveSelectorConfig>",
          "new": "class org.optaplanner.core.config.heuristic.selector.move.MoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.MoveSelectorConfig>",
          "annotationType": "javax.xml.bind.annotation.XmlSeeAlso",
          "annotation": "@javax.xml.bind.annotation.XmlSeeAlso({org.optaplanner.core.config.heuristic.selector.move.composite.UnionMoveSelectorConfig.class, org.optaplanner.core.config.heuristic.selector.move.composite.CartesianProductMoveSelectorConfig.class, org.optaplanner.core.config.heuristic.selector.move.generic.ChangeMoveSelectorConfig.class, org.optaplanner.core.config.heuristic.selector.move.generic.SwapMoveSelectorConfig.class, org.optaplanner.core.config.heuristic.selector.move.generic.PillarChangeMoveSelectorConfig.class, org.optaplanner.core.config.heuristic.selector.move.generic.PillarSwapMoveSelectorConfig.class, org.optaplanner.core.config.heuristic.selector.move.generic.chained.TailChainSwapMoveSelectorConfig.class, org.optaplanner.core.config.heuristic.selector.move.generic.chained.KOptMoveSelectorConfig.class, org.optaplanner.core.config.heuristic.selector.move.generic.chained.SubChainChangeMoveSelectorConfig.class, org.optaplanner.core.config.heuristic.selector.move.generic.chained.SubChainSwapMoveSelectorConfig.class, org.optaplanner.core.config.heuristic.selector.move.factory.MoveListFactoryConfig.class, org.optaplanner.core.config.heuristic.selector.move.factory.MoveIteratorFactoryConfig.class})",
          "package": "org.optaplanner.core.config.heuristic.selector.move",
          "classSimpleName": "MoveSelectorConfig",
          "elementKind": "class",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.move.factory.MoveIteratorFactoryConfig.moveIteratorFactoryCustomProperties",
          "new": "field org.optaplanner.core.config.heuristic.selector.move.factory.MoveIteratorFactoryConfig.moveIteratorFactoryCustomProperties",
          "annotationType": "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
          "annotation": "@javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter(org.optaplanner.core.impl.util.JaxbCustomPropertiesAdapter.class)",
          "package": "org.optaplanner.core.config.heuristic.selector.move.factory",
          "classSimpleName": "MoveIteratorFactoryConfig",
          "fieldName": "moveIteratorFactoryCustomProperties",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.move.factory.MoveListFactoryConfig.moveListFactoryCustomProperties",
          "new": "field org.optaplanner.core.config.heuristic.selector.move.factory.MoveListFactoryConfig.moveListFactoryCustomProperties",
          "annotationType": "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
          "annotation": "@javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter(org.optaplanner.core.impl.util.JaxbCustomPropertiesAdapter.class)",
          "package": "org.optaplanner.core.config.heuristic.selector.move.factory",
          "classSimpleName": "MoveListFactoryConfig",
          "fieldName": "moveListFactoryCustomProperties",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C>>>.pillarSelectorConfig",
          "new": "field org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C>>>.pillarSelectorConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"pillarSelector\")",
          "package": "org.optaplanner.core.config.heuristic.selector.move.generic",
          "classSimpleName": "AbstractPillarMoveSelectorConfig",
          "fieldName": "pillarSelectorConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C>>>.pillarSelectorConfig @ org.optaplanner.core.config.heuristic.selector.move.generic.PillarChangeMoveSelectorConfig",
          "new": "field org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C>>>.pillarSelectorConfig @ org.optaplanner.core.config.heuristic.selector.move.generic.PillarChangeMoveSelectorConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"pillarSelector\")",
          "package": "org.optaplanner.core.config.heuristic.selector.move.generic",
          "classSimpleName": "PillarChangeMoveSelectorConfig",
          "fieldName": "pillarSelectorConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C>>>.pillarSelectorConfig @ org.optaplanner.core.config.heuristic.selector.move.generic.PillarSwapMoveSelectorConfig",
          "new": "field org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C>>>.pillarSelectorConfig @ org.optaplanner.core.config.heuristic.selector.move.generic.PillarSwapMoveSelectorConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"pillarSelector\")",
          "package": "org.optaplanner.core.config.heuristic.selector.move.generic",
          "classSimpleName": "PillarSwapMoveSelectorConfig",
          "fieldName": "pillarSelectorConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.heuristic.selector.move.generic.SubPillarType",
          "new": "enum org.optaplanner.core.config.heuristic.selector.move.generic.SubPillarType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.heuristic.selector.move.generic",
          "classSimpleName": "SubPillarType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.field.removed",
          "old": "field org.optaplanner.core.config.heuristic.selector.value.ValueSelectorConfig.filterClassList",
          "package": "org.optaplanner.core.config.heuristic.selector.value",
          "classSimpleName": "ValueSelectorConfig",
          "fieldName": "filterClassList",
          "elementKind": "field",
          "justification": "OptaPlanner now support only a single selection filter class."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.value.ValueSelectorConfig.id",
          "new": "field org.optaplanner.core.config.heuristic.selector.value.ValueSelectorConfig.id",
          "annotationType": "javax.xml.bind.annotation.XmlAttribute",
          "annotation": "@javax.xml.bind.annotation.XmlAttribute",
          "package": "org.optaplanner.core.config.heuristic.selector.value",
          "classSimpleName": "ValueSelectorConfig",
          "fieldName": "id",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.value.ValueSelectorConfig.mimicSelectorRef",
          "new": "field org.optaplanner.core.config.heuristic.selector.value.ValueSelectorConfig.mimicSelectorRef",
          "annotationType": "javax.xml.bind.annotation.XmlAttribute",
          "annotation": "@javax.xml.bind.annotation.XmlAttribute",
          "package": "org.optaplanner.core.config.heuristic.selector.value",
          "classSimpleName": "ValueSelectorConfig",
          "fieldName": "mimicSelectorRef",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.value.ValueSelectorConfig.nearbySelectionConfig",
          "new": "field org.optaplanner.core.config.heuristic.selector.value.ValueSelectorConfig.nearbySelectionConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"nearbySelection\")",
          "package": "org.optaplanner.core.config.heuristic.selector.value",
          "classSimpleName": "ValueSelectorConfig",
          "fieldName": "nearbySelectionConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.value.ValueSelectorConfig.variableName",
          "new": "field org.optaplanner.core.config.heuristic.selector.value.ValueSelectorConfig.variableName",
          "annotationType": "javax.xml.bind.annotation.XmlAttribute",
          "annotation": "@javax.xml.bind.annotation.XmlAttribute",
          "package": "org.optaplanner.core.config.heuristic.selector.value",
          "classSimpleName": "ValueSelectorConfig",
          "fieldName": "variableName",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.method.removed",
          "old": "method java.util.List<java.lang.Class<? extends org.optaplanner.core.impl.heuristic.selector.common.decorator.SelectionFilter>> org.optaplanner.core.config.heuristic.selector.value.ValueSelectorConfig::getFilterClassList()",
          "package": "org.optaplanner.core.config.heuristic.selector.value",
          "classSimpleName": "ValueSelectorConfig",
          "methodName": "getFilterClassList",
          "elementKind": "method",
          "justification": "OptaPlanner now supports only a single selection filter class."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.config.heuristic.selector.value.ValueSelectorConfig::setFilterClassList(java.util.List<java.lang.Class<? extends org.optaplanner.core.impl.heuristic.selector.common.decorator.SelectionFilter>>)",
          "package": "org.optaplanner.core.config.heuristic.selector.value",
          "classSimpleName": "ValueSelectorConfig",
          "methodName": "setFilterClassList",
          "elementKind": "method",
          "justification": "OptaPlanner now supports only a single selection filter class."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.heuristic.selector.value.ValueSorterManner",
          "new": "enum org.optaplanner.core.config.heuristic.selector.value.ValueSorterManner",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.heuristic.selector.value",
          "classSimpleName": "ValueSorterManner",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.value.chained.SubChainSelectorConfig.valueSelectorConfig",
          "new": "field org.optaplanner.core.config.heuristic.selector.value.chained.SubChainSelectorConfig.valueSelectorConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"valueSelector\")",
          "package": "org.optaplanner.core.config.heuristic.selector.value.chained",
          "classSimpleName": "SubChainSelectorConfig",
          "fieldName": "valueSelectorConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.method.returnTypeChanged",
          "old": "method org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorConfig org.optaplanner.core.config.localsearch.LocalSearchPhaseConfig::getAcceptorConfig()",
          "new": "method org.optaplanner.core.config.localsearch.decider.acceptor.LocalSearchAcceptorConfig org.optaplanner.core.config.localsearch.LocalSearchPhaseConfig::getAcceptorConfig()",
          "oldType": "org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorConfig",
          "newType": "org.optaplanner.core.config.localsearch.decider.acceptor.LocalSearchAcceptorConfig",
          "package": "org.optaplanner.core.config.localsearch",
          "classSimpleName": "LocalSearchPhaseConfig",
          "methodName": "getAcceptorConfig",
          "elementKind": "method",
          "justification": "AcceptorConfig class has been renamed to LocalSearchAcceptorConfig."
        },
        {
          "code": "java.method.parameterTypeChanged",
          "old": "parameter void org.optaplanner.core.config.localsearch.LocalSearchPhaseConfig::setAcceptorConfig(===org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorConfig===)",
          "new": "parameter void org.optaplanner.core.config.localsearch.LocalSearchPhaseConfig::setAcceptorConfig(===org.optaplanner.core.config.localsearch.decider.acceptor.LocalSearchAcceptorConfig===)",
          "oldType": "org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorConfig",
          "newType": "org.optaplanner.core.config.localsearch.decider.acceptor.LocalSearchAcceptorConfig",
          "package": "org.optaplanner.core.config.localsearch",
          "classSimpleName": "LocalSearchPhaseConfig",
          "methodName": "setAcceptorConfig",
          "parameterIndex": "0",
          "elementKind": "parameter",
          "justification": "AcceptorConfig class has been renamed to LocalSearchAcceptorConfig."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.localsearch.LocalSearchType",
          "new": "enum org.optaplanner.core.config.localsearch.LocalSearchType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.localsearch",
          "classSimpleName": "LocalSearchType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.class.removed",
          "old": "class org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorConfig",
          "package": "org.optaplanner.core.config.localsearch.decider.acceptor",
          "classSimpleName": "AcceptorConfig",
          "elementKind": "class",
          "justification": "AcceptorConfig class has been renamed to LocalSearchAcceptorConfig."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorType",
          "new": "enum org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.localsearch.decider.acceptor",
          "classSimpleName": "AcceptorType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.localsearch.decider.acceptor.stepcountinghillclimbing.StepCountingHillClimbingType",
          "new": "enum org.optaplanner.core.config.localsearch.decider.acceptor.stepcountinghillclimbing.StepCountingHillClimbingType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.localsearch.decider.acceptor.stepcountinghillclimbing",
          "classSimpleName": "StepCountingHillClimbingType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.localsearch.decider.forager.FinalistPodiumType",
          "new": "enum org.optaplanner.core.config.localsearch.decider.forager.FinalistPodiumType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.localsearch.decider.forager",
          "classSimpleName": "FinalistPodiumType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.localsearch.decider.forager.LocalSearchPickEarlyType",
          "new": "enum org.optaplanner.core.config.localsearch.decider.forager.LocalSearchPickEarlyType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.localsearch.decider.forager",
          "classSimpleName": "LocalSearchPickEarlyType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.phaseConfigList",
          "new": "field org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.phaseConfigList",
          "annotationType": "javax.xml.bind.annotation.XmlElements",
          "annotation": "@javax.xml.bind.annotation.XmlElements({@javax.xml.bind.annotation.XmlElement(name = \"constructionHeuristic\", type = org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"customPhase\", type = org.optaplanner.core.config.phase.custom.CustomPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"exhaustiveSearch\", type = org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"localSearch\", type = org.optaplanner.core.config.localsearch.LocalSearchPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"noChangePhase\", type = org.optaplanner.core.config.phase.NoChangePhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"partitionedSearch\", type = org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.class)})",
          "package": "org.optaplanner.core.config.partitionedsearch",
          "classSimpleName": "PartitionedSearchPhaseConfig",
          "fieldName": "phaseConfigList",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.solutionPartitionerCustomProperties",
          "new": "field org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.solutionPartitionerCustomProperties",
          "annotationType": "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
          "annotation": "@javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter(org.optaplanner.core.impl.util.JaxbCustomPropertiesAdapter.class)",
          "package": "org.optaplanner.core.config.partitionedsearch",
          "classSimpleName": "PartitionedSearchPhaseConfig",
          "fieldName": "solutionPartitionerCustomProperties",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "class org.optaplanner.core.config.phase.PhaseConfig<C extends org.optaplanner.core.config.phase.PhaseConfig>",
          "new": "class org.optaplanner.core.config.phase.PhaseConfig<C extends org.optaplanner.core.config.phase.PhaseConfig>",
          "annotationType": "javax.xml.bind.annotation.XmlSeeAlso",
          "annotation": "@javax.xml.bind.annotation.XmlSeeAlso({org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.class, org.optaplanner.core.config.phase.custom.CustomPhaseConfig.class, org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchPhaseConfig.class, org.optaplanner.core.config.localsearch.LocalSearchPhaseConfig.class, org.optaplanner.core.config.phase.NoChangePhaseConfig.class, org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.class})",
          "package": "org.optaplanner.core.config.phase",
          "classSimpleName": "PhaseConfig",
          "elementKind": "class",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.phase.custom.CustomPhaseConfig.customPhaseCommandClassList",
          "new": "field org.optaplanner.core.config.phase.custom.CustomPhaseConfig.customPhaseCommandClassList",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"customPhaseCommandClass\")",
          "package": "org.optaplanner.core.config.phase.custom",
          "classSimpleName": "CustomPhaseConfig",
          "fieldName": "customPhaseCommandClassList",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.phase.custom.CustomPhaseConfig.customPhaseCommandList",
          "new": "field org.optaplanner.core.config.phase.custom.CustomPhaseConfig.customPhaseCommandList",
          "annotationType": "javax.xml.bind.annotation.XmlTransient",
          "annotation": "@javax.xml.bind.annotation.XmlTransient",
          "package": "org.optaplanner.core.config.phase.custom",
          "classSimpleName": "CustomPhaseConfig",
          "fieldName": "customPhaseCommandList",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.phase.custom.CustomPhaseConfig.customProperties",
          "new": "field org.optaplanner.core.config.phase.custom.CustomPhaseConfig.customProperties",
          "annotationType": "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
          "annotation": "@javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter(org.optaplanner.core.impl.util.JaxbCustomPropertiesAdapter.class)",
          "package": "org.optaplanner.core.config.phase.custom",
          "classSimpleName": "CustomPhaseConfig",
          "fieldName": "customProperties",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.score.definition.ScoreDefinitionType",
          "new": "enum org.optaplanner.core.config.score.definition.ScoreDefinitionType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.score.definition",
          "classSimpleName": "ScoreDefinitionType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.assertionScoreDirectorFactory",
          "new": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.assertionScoreDirectorFactory",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"assertionScoreDirectorFactory\")",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "fieldName": "assertionScoreDirectorFactory",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.constraintProviderCustomProperties",
          "new": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.constraintProviderCustomProperties",
          "annotationType": "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
          "annotation": "@javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter(org.optaplanner.core.impl.util.JaxbCustomPropertiesAdapter.class)",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "fieldName": "constraintProviderCustomProperties",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.easyScoreCalculatorCustomProperties",
          "new": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.easyScoreCalculatorCustomProperties",
          "annotationType": "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
          "annotation": "@javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter(org.optaplanner.core.impl.util.JaxbCustomPropertiesAdapter.class)",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "fieldName": "easyScoreCalculatorCustomProperties",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.incrementalScoreCalculatorCustomProperties",
          "new": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.incrementalScoreCalculatorCustomProperties",
          "annotationType": "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
          "annotation": "@javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter(org.optaplanner.core.impl.util.JaxbCustomPropertiesAdapter.class)",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "fieldName": "incrementalScoreCalculatorCustomProperties",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.kieBaseConfigurationProperties",
          "new": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.kieBaseConfigurationProperties",
          "annotationType": "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
          "annotation": "@javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter(org.optaplanner.core.impl.util.JaxbCustomPropertiesAdapter.class)",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "fieldName": "kieBaseConfigurationProperties",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.scoreDrlFileList",
          "new": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.scoreDrlFileList",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"scoreDrlFile\")",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "fieldName": "scoreDrlFileList",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.scoreDrlList",
          "new": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.scoreDrlList",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"scoreDrl\")",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "fieldName": "scoreDrlList",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.score.trend.InitializingScoreTrendLevel",
          "new": "enum org.optaplanner.core.config.score.trend.InitializingScoreTrendLevel",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.score.trend",
          "classSimpleName": "InitializingScoreTrendLevel",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.solver.EnvironmentMode",
          "new": "enum org.optaplanner.core.config.solver.EnvironmentMode",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.solver",
          "classSimpleName": "EnvironmentMode",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.solver.SolverConfig.entityClassList",
          "new": "field org.optaplanner.core.config.solver.SolverConfig.entityClassList",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"entityClass\")",
          "package": "org.optaplanner.core.config.solver",
          "classSimpleName": "SolverConfig",
          "fieldName": "entityClassList",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.solver.SolverConfig.phaseConfigList",
          "new": "field org.optaplanner.core.config.solver.SolverConfig.phaseConfigList",
          "annotationType": "javax.xml.bind.annotation.XmlElements",
          "annotation": "@javax.xml.bind.annotation.XmlElements({@javax.xml.bind.annotation.XmlElement(name = \"constructionHeuristic\", type = org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"customPhase\", type = org.optaplanner.core.config.phase.custom.CustomPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"exhaustiveSearch\", type = org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"localSearch\", type = org.optaplanner.core.config.localsearch.LocalSearchPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"noChangePhase\", type = org.optaplanner.core.config.phase.NoChangePhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"partitionedSearch\", type = org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.class)})",
          "package": "org.optaplanner.core.config.solver",
          "classSimpleName": "SolverConfig",
          "fieldName": "phaseConfigList",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.solver.SolverConfig.scoreDirectorFactoryConfig",
          "new": "field org.optaplanner.core.config.solver.SolverConfig.scoreDirectorFactoryConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"scoreDirectorFactory\")",
          "package": "org.optaplanner.core.config.solver",
          "classSimpleName": "SolverConfig",
          "fieldName": "scoreDirectorFactoryConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "class org.optaplanner.core.config.solver.SolverConfig",
          "new": "class org.optaplanner.core.config.solver.SolverConfig",
          "annotationType": "javax.xml.bind.annotation.XmlRootElement",
          "annotation": "@javax.xml.bind.annotation.XmlRootElement(name = \"solver\")",
          "package": "org.optaplanner.core.config.solver",
          "classSimpleName": "SolverConfig",
          "elementKind": "class",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.solver.random.RandomType",
          "new": "enum org.optaplanner.core.config.solver.random.RandomType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.solver.random",
          "classSimpleName": "RandomType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.solver.termination.TerminationCompositionStyle",
          "new": "enum org.optaplanner.core.config.solver.termination.TerminationCompositionStyle",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.solver.termination",
          "classSimpleName": "TerminationCompositionStyle",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.class.removed",
          "old": "interface org.optaplanner.core.api.domain.entity.PlanningEntity.NullMovableEntitySelectionFilter",
          "package": "org.optaplanner.core.api.domain.entity",
          "classSimpleName": "NullMovableEntitySelectionFilter",
          "elementKind": "interface",
          "justification": "Replaced by pinning."
        },
        {
          "code": "java.method.attributeRemovedFromAnnotationType",
          "old": "method java.lang.Class<? extends org.optaplanner.core.impl.heuristic.selector.common.decorator.SelectionFilter> org.optaplanner.core.api.domain.entity.PlanningEntity::movableEntitySelectionFilter()",
          "package": "org.optaplanner.core.api.domain.entity",
          "classSimpleName": "PlanningEntity",
          "methodName": "movableEntitySelectionFilter",
          "elementKind": "method",
          "justification": "Replaced by pinning."
        },
        {
          "code": "java.method.returnTypeChangedCovariantly",
          "old": "method org.optaplanner.core.api.score.holder.ScoreHolder<S> org.optaplanner.core.impl.score.definition.ScoreDefinition<S extends org.optaplanner.core.api.score.Score<S extends org.optaplanner.core.api.score.Score<S>>>::buildScoreHolder(boolean) @ org.optaplanner.core.api.domain.solution.PlanningScore.NullScoreDefinition",
          "new": "method org.optaplanner.core.impl.score.holder.AbstractScoreHolder<S> org.optaplanner.core.impl.score.definition.ScoreDefinition<S extends org.optaplanner.core.api.score.Score<S extends org.optaplanner.core.api.score.Score<S>>>::buildScoreHolder(boolean) @ org.optaplanner.core.api.domain.solution.PlanningScore.NullScoreDefinition",
          "oldType": "org.optaplanner.core.api.score.holder.ScoreHolder",
          "newType": "org.optaplanner.core.impl.score.holder.AbstractScoreHolder",
          "package": "org.optaplanner.core.api.domain.solution",
          "classSimpleName": "NullScoreDefinition",
          "methodName": "buildScoreHolder",
          "elementKind": "method",
          "justification": "ScoreHolder API significantly reduced."
        },
        {
          "code": "java.class.removed",
          "old": "interface org.optaplanner.core.api.domain.solution.Solution<S extends org.optaplanner.core.api.score.Score>",
          "package": "org.optaplanner.core.api.domain.solution",
          "classSimpleName": "Solution",
          "elementKind": "interface",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.annotation.noLongerPresent",
          "old": "@interface org.optaplanner.core.api.domain.solution.drools.ProblemFactCollectionProperty",
          "package": "org.optaplanner.core.api.domain.solution.drools",
          "classSimpleName": "ProblemFactCollectionProperty",
          "elementKind": "@interface",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.annotation.noLongerPresent",
          "old": "@interface org.optaplanner.core.api.domain.solution.drools.ProblemFactProperty",
          "package": "org.optaplanner.core.api.domain.solution.drools",
          "classSimpleName": "ProblemFactProperty",
          "elementKind": "@interface",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.class.nowFinal",
          "old": "class org.optaplanner.core.api.domain.valuerange.ValueRangeFactory",
          "new": "class org.optaplanner.core.api.domain.valuerange.ValueRangeFactory",
          "oldModifiers": "public",
          "newModifiers": "public final",
          "package": "org.optaplanner.core.api.domain.valuerange",
          "classSimpleName": "ValueRangeFactory",
          "elementKind": "class",
          "justification": "No need to allow for extensions."
        },
        {
          "code": "java.method.parameterTypeChanged",
          "old": "parameter void org.optaplanner.core.impl.domain.variable.listener.VariableListener<Entity_>::afterEntityAdded(===org.optaplanner.core.impl.score.director.ScoreDirector===, Entity_) @ org.optaplanner.core.api.domain.variable.CustomShadowVariable.NullVariableListener",
          "new": "parameter void org.optaplanner.core.impl.domain.variable.listener.VariableListener<Entity_>::afterEntityAdded(===org.optaplanner.core.api.score.director.ScoreDirector===, Entity_) @ org.optaplanner.core.api.domain.variable.CustomShadowVariable.NullVariableListener",
          "oldType": "org.optaplanner.core.impl.score.director.ScoreDirector",
          "newType": "org.optaplanner.core.api.score.director.ScoreDirector",
          "package": "org.optaplanner.core.api.domain.variable",
          "classSimpleName": "NullVariableListener",
          "methodName": "afterEntityAdded",
          "parameterIndex": "0",
          "elementKind": "parameter",
          "justification": "ScoreDirector API significantly reduced."
        },
        {
          "code": "java.method.parameterTypeChanged",
          "old": "parameter void org.optaplanner.core.impl.domain.variable.listener.VariableListener<Entity_>::afterEntityRemoved(===org.optaplanner.core.impl.score.director.ScoreDirector===, Entity_) @ org.optaplanner.core.api.domain.variable.CustomShadowVariable.NullVariableListener",
          "new": "parameter void org.optaplanner.core.impl.domain.variable.listener.VariableListener<Entity_>::afterEntityRemoved(===org.optaplanner.core.api.score.director.ScoreDirector===, Entity_) @ org.optaplanner.core.api.domain.variable.CustomShadowVariable.NullVariableListener",
          "oldType": "org.optaplanner.core.impl.score.director.ScoreDirector",
          "newType": "org.optaplanner.core.api.score.director.ScoreDirector",
          "package": "org.optaplanner.core.api.domain.variable",
          "classSimpleName": "NullVariableListener",
          "methodName": "afterEntityRemoved",
          "parameterIndex": "0",
          "elementKind": "parameter",
          "justification": "ScoreDirector API significantly reduced."
        },
        {
          "code": "java.method.parameterTypeChanged",
          "old": "parameter void org.optaplanner.core.impl.domain.variable.listener.VariableListener<Entity_>::afterVariableChanged(===org.optaplanner.core.impl.score.director.ScoreDirector===, Entity_) @ org.optaplanner.core.api.domain.variable.CustomShadowVariable.NullVariableListener",
          "new": "parameter void org.optaplanner.core.impl.domain.variable.listener.VariableListener<Entity_>::afterVariableChanged(===org.optaplanner.core.api.score.director.ScoreDirector===, Entity_) @ org.optaplanner.core.api.domain.variable.CustomShadowVariable.NullVariableListener",
          "oldType": "org.optaplanner.core.impl.score.director.ScoreDirector",
          "newType": "org.optaplanner.core.api.score.director.ScoreDirector",
          "package": "org.optaplanner.core.api.domain.variable",
          "classSimpleName": "NullVariableListener",
          "methodName": "afterVariableChanged",
          "parameterIndex": "0",
          "elementKind": "parameter",
          "justification": "ScoreDirector API significantly reduced."
        },
        {
          "code": "java.method.parameterTypeChanged",
          "old": "parameter void org.optaplanner.core.impl.domain.variable.listener.VariableListener<Entity_>::beforeEntityAdded(===org.optaplanner.core.impl.score.director.ScoreDirector===, Entity_) @ org.optaplanner.core.api.domain.variable.CustomShadowVariable.NullVariableListener",
          "new": "parameter void org.optaplanner.core.impl.domain.variable.listener.VariableListener<Entity_>::beforeEntityAdded(===org.optaplanner.core.api.score.director.ScoreDirector===, Entity_) @ org.optaplanner.core.api.domain.variable.CustomShadowVariable.NullVariableListener",
          "oldType": "org.optaplanner.core.impl.score.director.ScoreDirector",
          "newType": "org.optaplanner.core.api.score.director.ScoreDirector",
          "package": "org.optaplanner.core.api.domain.variable",
          "classSimpleName": "NullVariableListener",
          "methodName": "beforeEntityAdded",
          "parameterIndex": "0",
          "elementKind": "parameter",
          "justification": "ScoreDirector API significantly reduced."
        },
        {
          "code": "java.method.parameterTypeChanged",
          "old": "parameter void org.optaplanner.core.impl.domain.variable.listener.VariableListener<Entity_>::beforeEntityRemoved(===org.optaplanner.core.impl.score.director.ScoreDirector===, Entity_) @ org.optaplanner.core.api.domain.variable.CustomShadowVariable.NullVariableListener",
          "new": "parameter void org.optaplanner.core.impl.domain.variable.listener.VariableListener<Entity_>::beforeEntityRemoved(===org.optaplanner.core.api.score.director.ScoreDirector===, Entity_) @ org.optaplanner.core.api.domain.variable.CustomShadowVariable.NullVariableListener",
          "oldType": "org.optaplanner.core.impl.score.director.ScoreDirector",
          "newType": "org.optaplanner.core.api.score.director.ScoreDirector",
          "package": "org.optaplanner.core.api.domain.variable",
          "classSimpleName": "NullVariableListener",
          "methodName": "beforeEntityRemoved",
          "parameterIndex": "0",
          "elementKind": "parameter",
          "justification": "ScoreDirector API significantly reduced."
        },
        {
          "code": "java.method.parameterTypeChanged",
          "old": "parameter void org.optaplanner.core.impl.domain.variable.listener.VariableListener<Entity_>::beforeVariableChanged(===org.optaplanner.core.impl.score.director.ScoreDirector===, Entity_) @ org.optaplanner.core.api.domain.variable.CustomShadowVariable.NullVariableListener",
          "new": "parameter void org.optaplanner.core.impl.domain.variable.listener.VariableListener<Entity_>::beforeVariableChanged(===org.optaplanner.core.api.score.director.ScoreDirector===, Entity_) @ org.optaplanner.core.api.domain.variable.CustomShadowVariable.NullVariableListener",
          "oldType": "org.optaplanner.core.impl.score.director.ScoreDirector",
          "newType": "org.optaplanner.core.api.score.director.ScoreDirector",
          "package": "org.optaplanner.core.api.domain.variable",
          "classSimpleName": "NullVariableListener",
          "methodName": "beforeVariableChanged",
          "parameterIndex": "0",
          "elementKind": "parameter",
          "justification": "ScoreDirector API significantly reduced."
        },
        {
          "code": "java.class.removed",
          "old": "interface org.optaplanner.core.api.domain.variable.PlanningVariable.NullReinitializeVariableEntityFilter",
          "package": "org.optaplanner.core.api.domain.variable",
          "classSimpleName": "NullReinitializeVariableEntityFilter",
          "elementKind": "interface",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.attributeRemovedFromAnnotationType",
          "old": "method java.lang.Class<? extends org.optaplanner.core.impl.heuristic.selector.common.decorator.SelectionFilter> org.optaplanner.core.api.domain.variable.PlanningVariable::reinitializeVariableEntityFilter()",
          "package": "org.optaplanner.core.api.domain.variable",
          "classSimpleName": "PlanningVariable",
          "methodName": "reinitializeVariableEntityFilter",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.returnTypeChanged",
          "old": "method Score_ org.optaplanner.core.api.score.Score<Score_ extends org.optaplanner.core.api.score.Score>::add(Score_) @ org.optaplanner.core.api.score.AbstractBendableScore<S extends org.optaplanner.core.api.score.FeasibilityScore<S extends org.optaplanner.core.api.score.FeasibilityScore<S>>>",
          "new": "method Score_ org.optaplanner.core.api.score.Score<Score_ extends org.optaplanner.core.api.score.Score>::add(Score_) @ org.optaplanner.core.api.score.AbstractBendableScore<S extends org.optaplanner.core.api.score.Score<S extends org.optaplanner.core.api.score.Score<S>>>",
          "oldType": "S extends org.optaplanner.core.api.score.FeasibilityScore<S>",
          "newType": "S extends org.optaplanner.core.api.score.Score<S>",
          "package": "org.optaplanner.core.api.score",
          "classSimpleName": "AbstractBendableScore",
          "methodName": "add",
          "elementKind": "method",
          "justification": "FeasibilityScore turns into Score."
        },
        {
          "code": "java.method.returnTypeChanged",
          "old": "method Score_ org.optaplanner.core.api.score.Score<Score_ extends org.optaplanner.core.api.score.Score>::subtract(Score_) @ org.optaplanner.core.api.score.AbstractBendableScore<S extends org.optaplanner.core.api.score.FeasibilityScore<S extends org.optaplanner.core.api.score.FeasibilityScore<S>>>",
          "new": "method Score_ org.optaplanner.core.api.score.Score<Score_ extends org.optaplanner.core.api.score.Score>::subtract(Score_) @ org.optaplanner.core.api.score.AbstractBendableScore<S extends org.optaplanner.core.api.score.Score<S extends org.optaplanner.core.api.score.Score<S>>>",
          "oldType": "S extends org.optaplanner.core.api.score.FeasibilityScore<S>",
          "newType": "S extends org.optaplanner.core.api.score.Score<S>",
          "package": "org.optaplanner.core.api.score",
          "classSimpleName": "AbstractBendableScore",
          "methodName": "subtract",
          "elementKind": "method",
          "justification": "FeasibilityScore turns into Score."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "old": "class org.optaplanner.core.api.score.AbstractBendableScore<S extends org.optaplanner.core.api.score.FeasibilityScore<S>>",
          "new": "class org.optaplanner.core.api.score.AbstractBendableScore<S extends org.optaplanner.core.api.score.Score<S>>",
          "interface": "org.optaplanner.core.api.score.Score<S extends org.optaplanner.core.api.score.FeasibilityScore<S>>",
          "package": "org.optaplanner.core.api.score",
          "classSimpleName": "AbstractBendableScore",
          "elementKind": "class",
          "justification": "FeasibilityScore turns into Score."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "old": "class org.optaplanner.core.api.score.AbstractBendableScore<S extends org.optaplanner.core.api.score.FeasibilityScore<S>>",
          "new": "class org.optaplanner.core.api.score.AbstractBendableScore<S extends org.optaplanner.core.api.score.Score<S>>",
          "interface": "java.lang.Comparable<S extends org.optaplanner.core.api.score.FeasibilityScore<S>>",
          "package": "org.optaplanner.core.api.score",
          "classSimpleName": "AbstractBendableScore",
          "elementKind": "class",
          "justification": "FeasibilityScore turns into Score."
        },
        {
          "code": "java.generics.formalTypeParameterChanged",
          "old": "class org.optaplanner.core.api.score.AbstractBendableScore<S extends org.optaplanner.core.api.score.FeasibilityScore<S>>",
          "new": "class org.optaplanner.core.api.score.AbstractBendableScore<S extends org.optaplanner.core.api.score.Score<S>>",
          "oldTypeParameter": "S extends org.optaplanner.core.api.score.FeasibilityScore<S extends org.optaplanner.core.api.score.FeasibilityScore<S>>",
          "newTypeParameter": "S extends org.optaplanner.core.api.score.Score<S extends org.optaplanner.core.api.score.Score<S>>",
          "package": "org.optaplanner.core.api.score",
          "classSimpleName": "AbstractBendableScore",
          "elementKind": "class",
          "justification": "FeasibilityScore turns into Score."
        },
        {
          "code": "java.class.superTypeTypeParametersChanged",
          "old": "class org.optaplanner.core.api.score.AbstractBendableScore<S extends org.optaplanner.core.api.score.FeasibilityScore<S>>",
          "new": "class org.optaplanner.core.api.score.AbstractBendableScore<S extends org.optaplanner.core.api.score.Score<S>>",
          "oldSuperType": "org.optaplanner.core.api.score.AbstractScore<S extends org.optaplanner.core.api.score.FeasibilityScore<S>>",
          "newSuperType": "org.optaplanner.core.api.score.AbstractScore<S extends org.optaplanner.core.api.score.Score<S>>",
          "package": "org.optaplanner.core.api.score",
          "classSimpleName": "AbstractBendableScore",
          "elementKind": "class",
          "justification": "FeasibilityScore turns into Score."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.api.score.AbstractScore<S extends org.optaplanner.core.api.score.Score>::assertNoInitScore()",
          "package": "org.optaplanner.core.api.score",
          "classSimpleName": "AbstractScore",
          "methodName": "assertNoInitScore",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method double org.optaplanner.core.api.score.AbstractScore<S extends org.optaplanner.core.api.score.Score>::parseLevelAsDouble(java.lang.Class<? extends org.optaplanner.core.api.score.Score>, java.lang.String, java.lang.String)",
          "package": "org.optaplanner.core.api.score",
          "classSimpleName": "AbstractScore",
          "methodName": "parseLevelAsDouble",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.class.removed",
          "old": "interface org.optaplanner.core.api.score.FeasibilityScore<S extends org.optaplanner.core.api.score.FeasibilityScore>",
          "package": "org.optaplanner.core.api.score",
          "classSimpleName": "FeasibilityScore",
          "elementKind": "interface",
          "justification": "FeasibilityScore turns into Score."
        },
        {
          "code": "java.method.removed",
          "old": "method boolean org.optaplanner.core.api.score.Score<Score_ extends org.optaplanner.core.api.score.Score>::isCompatibleArithmeticArgument(org.optaplanner.core.api.score.Score)",
          "package": "org.optaplanner.core.api.score",
          "classSimpleName": "Score",
          "methodName": "isCompatibleArithmeticArgument",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method boolean org.optaplanner.core.api.score.Score<Score_ extends org.optaplanner.core.api.score.Score>::isFeasible()",
          "package": "org.optaplanner.core.api.score",
          "classSimpleName": "Score",
          "methodName": "isFeasible",
          "elementKind": "method",
          "justification": "Moved to Score."
        },
        {
          "code": "java.method.removed",
          "old": "method Score_ org.optaplanner.core.api.score.Score<Score_ extends org.optaplanner.core.api.score.Score>::toInitializedScore()",
          "package": "org.optaplanner.core.api.score",
          "classSimpleName": "Score",
          "methodName": "toInitializedScore",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.ScoreExplanation<Solution_> org.optaplanner.core.api.score.ScoreManager<Solution_>::explainScore(Solution_)",
          "package": "org.optaplanner.core.api.score",
          "classSimpleName": "ScoreManager",
          "methodName": "explainScore",
          "elementKind": "method",
          "justification": "New functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method java.lang.String org.optaplanner.core.api.score.ScoreManager<Solution_>::getSummary(Solution_)",
          "package": "org.optaplanner.core.api.score",
          "classSimpleName": "ScoreManager",
          "methodName": "getSummary",
          "elementKind": "method",
          "justification": "explainScore(...) was renamed."
        },
        {
          "code": "java.method.removed",
          "old": "method boolean org.optaplanner.core.api.score.buildin.bendable.BendableScore::isCompatibleArithmeticArgument(org.optaplanner.core.api.score.Score)",
          "package": "org.optaplanner.core.api.score.buildin.bendable",
          "classSimpleName": "BendableScore",
          "methodName": "isCompatibleArithmeticArgument",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method org.optaplanner.core.api.score.buildin.bendable.BendableScore org.optaplanner.core.api.score.buildin.bendable.BendableScore::toInitializedScore()",
          "package": "org.optaplanner.core.api.score.buildin.bendable",
          "classSimpleName": "BendableScore",
          "methodName": "toInitializedScore",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method org.optaplanner.core.api.score.buildin.bendable.BendableScore org.optaplanner.core.api.score.buildin.bendable.BendableScore::valueOf(int[], int[])",
          "package": "org.optaplanner.core.api.score.buildin.bendable",
          "classSimpleName": "BendableScore",
          "methodName": "valueOf",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method org.optaplanner.core.api.score.buildin.bendable.BendableScore org.optaplanner.core.api.score.buildin.bendable.BendableScore::valueOfUninitialized(int, int[], int[])",
          "package": "org.optaplanner.core.api.score.buildin.bendable",
          "classSimpleName": "BendableScore",
          "methodName": "valueOfUninitialized",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.class.removed",
          "old": "class org.optaplanner.core.api.score.comparator.NaturalScoreComparator",
          "package": "org.optaplanner.core.api.score.comparator",
          "classSimpleName": "NaturalScoreComparator",
          "elementKind": "class",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "old": "class org.optaplanner.core.api.score.constraint.ConstraintMatch",
          "new": "class org.optaplanner.core.api.score.constraint.ConstraintMatch",
          "interface": "java.io.Serializable",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatch",
          "elementKind": "class",
          "justification": "Use of Java serialization is discouraged."
        },
        {
          "code": "java.class.removed",
          "old": "class org.optaplanner.core.api.score.constraint.ConstraintMatchScoreComparator",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchScoreComparator",
          "elementKind": "class",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.api.score.constraint.ConstraintMatchTotal::<init>(java.lang.String, java.lang.String, org.optaplanner.core.api.score.Score)",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "methodName": "<init>",
          "elementKind": "constructor",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.api.score.constraint.ConstraintMatchTotal::<init>(java.lang.String, java.lang.String, org.optaplanner.core.api.score.Score, org.optaplanner.core.api.score.Score)",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "methodName": "<init>",
          "elementKind": "constructor",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method org.optaplanner.core.api.score.constraint.ConstraintMatch org.optaplanner.core.api.score.constraint.ConstraintMatchTotal::addConstraintMatch(java.util.List<java.lang.Object>, org.optaplanner.core.api.score.Score)",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "methodName": "addConstraintMatch",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method java.lang.Object java.lang.Object::clone() throws java.lang.CloneNotSupportedException @ org.optaplanner.core.api.score.constraint.ConstraintMatchTotal",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "methodName": "clone",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method int org.optaplanner.core.api.score.constraint.ConstraintMatchTotal::compareTo(org.optaplanner.core.api.score.constraint.ConstraintMatchTotal)",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "methodName": "compareTo",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method boolean org.optaplanner.core.api.score.constraint.ConstraintMatchTotal::equals(java.lang.Object)",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "methodName": "equals",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method void java.lang.Object::finalize() throws java.lang.Throwable @ org.optaplanner.core.api.score.constraint.ConstraintMatchTotal",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "methodName": "finalize",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method java.lang.Class<?> java.lang.Object::getClass() @ org.optaplanner.core.api.score.constraint.ConstraintMatchTotal",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "methodName": "getClass",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.nowAbstract",
          "old": "method java.lang.String org.optaplanner.core.api.score.constraint.ConstraintMatchTotal::getConstraintId()",
          "new": "method java.lang.String org.optaplanner.core.api.score.constraint.ConstraintMatchTotal::getConstraintId()",
          "oldModifiers": "public",
          "newModifiers": "public abstract",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "methodName": "getConstraintId",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.nowAbstract",
          "old": "method java.util.Set<org.optaplanner.core.api.score.constraint.ConstraintMatch> org.optaplanner.core.api.score.constraint.ConstraintMatchTotal::getConstraintMatchSet()",
          "new": "method java.util.Set<org.optaplanner.core.api.score.constraint.ConstraintMatch> org.optaplanner.core.api.score.constraint.ConstraintMatchTotal::getConstraintMatchSet()",
          "oldModifiers": "public",
          "newModifiers": "public abstract",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "methodName": "getConstraintMatchSet",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.nowAbstract",
          "old": "method java.lang.String org.optaplanner.core.api.score.constraint.ConstraintMatchTotal::getConstraintName()",
          "new": "method java.lang.String org.optaplanner.core.api.score.constraint.ConstraintMatchTotal::getConstraintName()",
          "oldModifiers": "public",
          "newModifiers": "public abstract",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "methodName": "getConstraintName",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.nowAbstract",
          "old": "method java.lang.String org.optaplanner.core.api.score.constraint.ConstraintMatchTotal::getConstraintPackage()",
          "new": "method java.lang.String org.optaplanner.core.api.score.constraint.ConstraintMatchTotal::getConstraintPackage()",
          "oldModifiers": "public",
          "newModifiers": "public abstract",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "methodName": "getConstraintPackage",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.nowAbstract",
          "old": "method org.optaplanner.core.api.score.Score org.optaplanner.core.api.score.constraint.ConstraintMatchTotal::getConstraintWeight()",
          "new": "method org.optaplanner.core.api.score.Score org.optaplanner.core.api.score.constraint.ConstraintMatchTotal::getConstraintWeight()",
          "oldModifiers": "public",
          "newModifiers": "public abstract",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "methodName": "getConstraintWeight",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.nowAbstract",
          "old": "method org.optaplanner.core.api.score.Score org.optaplanner.core.api.score.constraint.ConstraintMatchTotal::getScore()",
          "new": "method org.optaplanner.core.api.score.Score org.optaplanner.core.api.score.constraint.ConstraintMatchTotal::getScore()",
          "oldModifiers": "public",
          "newModifiers": "public abstract",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "methodName": "getScore",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method org.optaplanner.core.api.score.Score org.optaplanner.core.api.score.constraint.ConstraintMatchTotal::getScoreTotal()",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "methodName": "getScoreTotal",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method int org.optaplanner.core.api.score.constraint.ConstraintMatchTotal::hashCode()",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "methodName": "hashCode",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method void java.lang.Object::notify() @ org.optaplanner.core.api.score.constraint.ConstraintMatchTotal",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "methodName": "notify",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method void java.lang.Object::notifyAll() @ org.optaplanner.core.api.score.constraint.ConstraintMatchTotal",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "methodName": "notifyAll",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.api.score.constraint.ConstraintMatchTotal::removeConstraintMatch(org.optaplanner.core.api.score.constraint.ConstraintMatch)",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "methodName": "removeConstraintMatch",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method java.lang.String org.optaplanner.core.api.score.constraint.ConstraintMatchTotal::toString()",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "methodName": "toString",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method void java.lang.Object::wait() throws java.lang.InterruptedException @ org.optaplanner.core.api.score.constraint.ConstraintMatchTotal",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "methodName": "wait",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method void java.lang.Object::wait(long) throws java.lang.InterruptedException @ org.optaplanner.core.api.score.constraint.ConstraintMatchTotal",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "methodName": "wait",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method void java.lang.Object::wait(long, int) throws java.lang.InterruptedException @ org.optaplanner.core.api.score.constraint.ConstraintMatchTotal",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "methodName": "wait",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.class.kindChanged",
          "old": "class org.optaplanner.core.api.score.constraint.ConstraintMatchTotal",
          "new": "interface org.optaplanner.core.api.score.constraint.ConstraintMatchTotal",
          "oldKind": "class",
          "newKind": "interface",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "elementKind": "class",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "old": "class org.optaplanner.core.api.score.constraint.ConstraintMatchTotal",
          "new": "interface org.optaplanner.core.api.score.constraint.ConstraintMatchTotal",
          "interface": "java.io.Serializable",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "elementKind": "class",
          "justification": "Use of Java serialization is discouraged."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "old": "class org.optaplanner.core.api.score.constraint.ConstraintMatchTotal",
          "new": "interface org.optaplanner.core.api.score.constraint.ConstraintMatchTotal",
          "interface": "java.lang.Comparable<org.optaplanner.core.api.score.constraint.ConstraintMatchTotal>",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "elementKind": "class",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.class.nowAbstract",
          "old": "class org.optaplanner.core.api.score.constraint.ConstraintMatchTotal",
          "new": "interface org.optaplanner.core.api.score.constraint.ConstraintMatchTotal",
          "oldModifiers": "public final",
          "newModifiers": "public abstract",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "elementKind": "class",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.class.removed",
          "old": "class org.optaplanner.core.api.score.constraint.ConstraintMatchTotalScoreComparator",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotalScoreComparator",
          "elementKind": "class",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.api.score.constraint.Indictment::<init>(java.lang.Object, org.optaplanner.core.api.score.Score)",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "methodName": "<init>",
          "elementKind": "constructor",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.api.score.constraint.Indictment::addConstraintMatch(org.optaplanner.core.api.score.constraint.ConstraintMatch)",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "methodName": "addConstraintMatch",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method java.lang.Object java.lang.Object::clone() throws java.lang.CloneNotSupportedException @ org.optaplanner.core.api.score.constraint.Indictment",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "methodName": "clone",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method int org.optaplanner.core.api.score.constraint.Indictment::compareTo(org.optaplanner.core.api.score.constraint.Indictment)",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "methodName": "compareTo",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method boolean org.optaplanner.core.api.score.constraint.Indictment::equals(java.lang.Object)",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "methodName": "equals",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method void java.lang.Object::finalize() throws java.lang.Throwable @ org.optaplanner.core.api.score.constraint.Indictment",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "methodName": "finalize",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method java.lang.Class<?> java.lang.Object::getClass() @ org.optaplanner.core.api.score.constraint.Indictment",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "methodName": "getClass",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.nowAbstract",
          "old": "method java.util.Set<org.optaplanner.core.api.score.constraint.ConstraintMatch> org.optaplanner.core.api.score.constraint.Indictment::getConstraintMatchSet()",
          "new": "method java.util.Set<org.optaplanner.core.api.score.constraint.ConstraintMatch> org.optaplanner.core.api.score.constraint.Indictment::getConstraintMatchSet()",
          "oldModifiers": "public",
          "newModifiers": "public abstract",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "methodName": "getConstraintMatchSet",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.nowAbstract",
          "old": "method java.lang.Object org.optaplanner.core.api.score.constraint.Indictment::getJustification()",
          "new": "method java.lang.Object org.optaplanner.core.api.score.constraint.Indictment::getJustification()",
          "oldModifiers": "public",
          "newModifiers": "public abstract",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "methodName": "getJustification",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.nowAbstract",
          "old": "method org.optaplanner.core.api.score.Score org.optaplanner.core.api.score.constraint.Indictment::getScore()",
          "new": "method org.optaplanner.core.api.score.Score org.optaplanner.core.api.score.constraint.Indictment::getScore()",
          "oldModifiers": "public",
          "newModifiers": "public abstract",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "methodName": "getScore",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method org.optaplanner.core.api.score.Score org.optaplanner.core.api.score.constraint.Indictment::getScoreTotal()",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "methodName": "getScoreTotal",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method int org.optaplanner.core.api.score.constraint.Indictment::hashCode()",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "methodName": "hashCode",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method void java.lang.Object::notify() @ org.optaplanner.core.api.score.constraint.Indictment",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "methodName": "notify",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method void java.lang.Object::notifyAll() @ org.optaplanner.core.api.score.constraint.Indictment",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "methodName": "notifyAll",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.api.score.constraint.Indictment::removeConstraintMatch(org.optaplanner.core.api.score.constraint.ConstraintMatch)",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "methodName": "removeConstraintMatch",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method java.lang.String org.optaplanner.core.api.score.constraint.Indictment::toString()",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "methodName": "toString",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method void java.lang.Object::wait() throws java.lang.InterruptedException @ org.optaplanner.core.api.score.constraint.Indictment",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "methodName": "wait",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method void java.lang.Object::wait(long) throws java.lang.InterruptedException @ org.optaplanner.core.api.score.constraint.Indictment",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "methodName": "wait",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.method.removed",
          "old": "method void java.lang.Object::wait(long, int) throws java.lang.InterruptedException @ org.optaplanner.core.api.score.constraint.Indictment",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "methodName": "wait",
          "elementKind": "method",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.class.kindChanged",
          "old": "class org.optaplanner.core.api.score.constraint.Indictment",
          "new": "interface org.optaplanner.core.api.score.constraint.Indictment",
          "oldKind": "class",
          "newKind": "interface",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "elementKind": "class",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "old": "class org.optaplanner.core.api.score.constraint.Indictment",
          "new": "interface org.optaplanner.core.api.score.constraint.Indictment",
          "interface": "java.io.Serializable",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "elementKind": "class",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "old": "class org.optaplanner.core.api.score.constraint.Indictment",
          "new": "interface org.optaplanner.core.api.score.constraint.Indictment",
          "interface": "java.lang.Comparable<org.optaplanner.core.api.score.constraint.Indictment>",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "elementKind": "class",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.class.nowAbstract",
          "old": "class org.optaplanner.core.api.score.constraint.Indictment",
          "new": "interface org.optaplanner.core.api.score.constraint.Indictment",
          "oldModifiers": "public final",
          "newModifiers": "public abstract",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "elementKind": "class",
          "justification": "Turned immutable and an interface."
        },
        {
          "code": "java.class.removed",
          "old": "class org.optaplanner.core.api.score.constraint.IndictmentScoreComparator",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "IndictmentScoreComparator",
          "elementKind": "class",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.class.removed",
          "old": "class org.optaplanner.core.api.score.constraint.IndictmentScoreTotalComparator",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "IndictmentScoreTotalComparator",
          "elementKind": "class",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.parameterTypeChanged",
          "old": "parameter boolean org.optaplanner.core.api.solver.Solver<Solution_>::addProblemFactChange(===org.optaplanner.core.impl.solver.ProblemFactChange<Solution_>===)",
          "new": "parameter boolean org.optaplanner.core.api.solver.Solver<Solution_>::addProblemFactChange(===org.optaplanner.core.api.solver.ProblemFactChange<Solution_>===)",
          "oldType": "org.optaplanner.core.impl.solver.ProblemFactChange<Solution_ extends java.lang.Object>",
          "newType": "org.optaplanner.core.api.solver.ProblemFactChange<Solution_ extends java.lang.Object>",
          "package": "org.optaplanner.core.api.solver",
          "classSimpleName": "Solver",
          "methodName": "addProblemFactChange",
          "parameterIndex": "0",
          "elementKind": "parameter",
          "justification": "PFC enters public API."
        },
        {
          "code": "java.method.parameterTypeParameterChanged",
          "old": "parameter boolean org.optaplanner.core.api.solver.Solver<Solution_>::addProblemFactChanges(===java.util.List<org.optaplanner.core.impl.solver.ProblemFactChange<Solution_>>===)",
          "new": "parameter boolean org.optaplanner.core.api.solver.Solver<Solution_>::addProblemFactChanges(===java.util.List<org.optaplanner.core.api.solver.ProblemFactChange<Solution_>>===)",
          "oldType": "java.util.List<org.optaplanner.core.impl.solver.ProblemFactChange<Solution_ extends java.lang.Object>>",
          "newType": "java.util.List<org.optaplanner.core.api.solver.ProblemFactChange<Solution_ extends java.lang.Object>>",
          "package": "org.optaplanner.core.api.solver",
          "classSimpleName": "Solver",
          "methodName": "addProblemFactChanges",
          "parameterIndex": "0",
          "elementKind": "parameter",
          "justification": "PFC enters public API."
        },
        {
          "code": "java.method.removed",
          "old": "method java.lang.String org.optaplanner.core.api.solver.Solver<Solution_>::explainBestScore()",
          "package": "org.optaplanner.core.api.solver",
          "classSimpleName": "Solver",
          "methodName": "explainBestScore",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method org.optaplanner.core.api.score.Score org.optaplanner.core.api.solver.Solver<Solution_>::getBestScore()",
          "package": "org.optaplanner.core.api.solver",
          "classSimpleName": "Solver",
          "methodName": "getBestScore",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method Solution_ org.optaplanner.core.api.solver.Solver<Solution_>::getBestSolution()",
          "package": "org.optaplanner.core.api.solver",
          "classSimpleName": "Solver",
          "methodName": "getBestSolution",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method org.optaplanner.core.impl.score.director.ScoreDirectorFactory<Solution_> org.optaplanner.core.api.solver.Solver<Solution_>::getScoreDirectorFactory()",
          "package": "org.optaplanner.core.api.solver",
          "classSimpleName": "Solver",
          "methodName": "getScoreDirectorFactory",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method long org.optaplanner.core.api.solver.Solver<Solution_>::getTimeMillisSpent()",
          "package": "org.optaplanner.core.api.solver",
          "classSimpleName": "Solver",
          "methodName": "getTimeMillisSpent",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method org.optaplanner.core.api.solver.SolverFactory<Solution_> org.optaplanner.core.api.solver.SolverFactory<Solution_>::cloneSolverFactory()",
          "package": "org.optaplanner.core.api.solver",
          "classSimpleName": "SolverFactory",
          "methodName": "cloneSolverFactory",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method <Solution_> org.optaplanner.core.api.solver.SolverFactory<Solution_> org.optaplanner.core.api.solver.SolverFactory<Solution_>::createEmpty()",
          "package": "org.optaplanner.core.api.solver",
          "classSimpleName": "SolverFactory",
          "methodName": "createEmpty",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method <Solution_> org.optaplanner.core.api.solver.SolverFactory<Solution_> org.optaplanner.core.api.solver.SolverFactory<Solution_>::createEmpty(java.lang.ClassLoader)",
          "package": "org.optaplanner.core.api.solver",
          "classSimpleName": "SolverFactory",
          "methodName": "createEmpty",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method <Solution_> org.optaplanner.core.api.solver.SolverFactory<Solution_> org.optaplanner.core.api.solver.SolverFactory<Solution_>::createEmptyFromKieContainer(org.kie.api.builder.ReleaseId)",
          "package": "org.optaplanner.core.api.solver",
          "classSimpleName": "SolverFactory",
          "methodName": "createEmptyFromKieContainer",
          "elementKind": "method",
          "justification": "Removed as not supported by Kogito."
        },
        {
          "code": "java.method.removed",
          "old": "method <Solution_> org.optaplanner.core.api.solver.SolverFactory<Solution_> org.optaplanner.core.api.solver.SolverFactory<Solution_>::createEmptyFromKieContainer(org.kie.api.runtime.KieContainer)",
          "package": "org.optaplanner.core.api.solver",
          "classSimpleName": "SolverFactory",
          "methodName": "createEmptyFromKieContainer",
          "elementKind": "method",
          "justification": "Removed as not supported by Kogito."
        },
        {
          "code": "java.method.removed",
          "old": "method <Solution_> org.optaplanner.core.api.solver.SolverFactory<Solution_> org.optaplanner.core.api.solver.SolverFactory<Solution_>::createFromKieContainerXmlResource(java.lang.String)",
          "package": "org.optaplanner.core.api.solver",
          "classSimpleName": "SolverFactory",
          "methodName": "createFromKieContainerXmlResource",
          "elementKind": "method",
          "justification": "Removed as not supported by Kogito."
        },
        {
          "code": "java.method.removed",
          "old": "method <Solution_> org.optaplanner.core.api.solver.SolverFactory<Solution_> org.optaplanner.core.api.solver.SolverFactory<Solution_>::createFromKieContainerXmlResource(org.kie.api.builder.ReleaseId, java.lang.String)",
          "package": "org.optaplanner.core.api.solver",
          "classSimpleName": "SolverFactory",
          "methodName": "createFromKieContainerXmlResource",
          "elementKind": "method",
          "justification": "Removed as not supported by Kogito."
        },
        {
          "code": "java.method.removed",
          "old": "method <Solution_> org.optaplanner.core.api.solver.SolverFactory<Solution_> org.optaplanner.core.api.solver.SolverFactory<Solution_>::createFromKieContainerXmlResource(org.kie.api.runtime.KieContainer, java.lang.String)",
          "package": "org.optaplanner.core.api.solver",
          "classSimpleName": "SolverFactory",
          "methodName": "createFromKieContainerXmlResource",
          "elementKind": "method",
          "justification": "Removed as not supported by Kogito."
        },
        {
          "code": "java.method.removed",
          "old": "method <Solution_> org.optaplanner.core.api.solver.SolverFactory<Solution_> org.optaplanner.core.api.solver.SolverFactory<Solution_>::createFromXmlInputStream(java.io.InputStream)",
          "package": "org.optaplanner.core.api.solver",
          "classSimpleName": "SolverFactory",
          "methodName": "createFromXmlInputStream",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method <Solution_> org.optaplanner.core.api.solver.SolverFactory<Solution_> org.optaplanner.core.api.solver.SolverFactory<Solution_>::createFromXmlInputStream(java.io.InputStream, java.lang.ClassLoader)",
          "package": "org.optaplanner.core.api.solver",
          "classSimpleName": "SolverFactory",
          "methodName": "createFromXmlInputStream",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method <Solution_> org.optaplanner.core.api.solver.SolverFactory<Solution_> org.optaplanner.core.api.solver.SolverFactory<Solution_>::createFromXmlReader(java.io.Reader)",
          "package": "org.optaplanner.core.api.solver",
          "classSimpleName": "SolverFactory",
          "methodName": "createFromXmlReader",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method <Solution_> org.optaplanner.core.api.solver.SolverFactory<Solution_> org.optaplanner.core.api.solver.SolverFactory<Solution_>::createFromXmlReader(java.io.Reader, java.lang.ClassLoader)",
          "package": "org.optaplanner.core.api.solver",
          "classSimpleName": "SolverFactory",
          "methodName": "createFromXmlReader",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method org.optaplanner.core.impl.score.director.ScoreDirectorFactory<Solution_> org.optaplanner.core.api.solver.SolverFactory<Solution_>::getScoreDirectorFactory()",
          "package": "org.optaplanner.core.api.solver",
          "classSimpleName": "SolverFactory",
          "methodName": "getScoreDirectorFactory",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method org.optaplanner.core.config.solver.SolverConfig org.optaplanner.core.api.solver.SolverFactory<Solution_>::getSolverConfig()",
          "package": "org.optaplanner.core.api.solver",
          "classSimpleName": "SolverFactory",
          "methodName": "getSolverConfig",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method boolean org.optaplanner.core.api.solver.event.BestSolutionChangedEvent<Solution_>::isNewBestSolutionInitialized()",
          "package": "org.optaplanner.core.api.solver.event",
          "classSimpleName": "BestSolutionChangedEvent",
          "methodName": "isNewBestSolutionInitialized",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.class.removed",
          "old": "class org.optaplanner.core.config.SolverConfigContext",
          "package": "org.optaplanner.core.config",
          "classSimpleName": "SolverConfigContext",
          "elementKind": "class",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.class.removed",
          "old": "class org.optaplanner.core.config.domain.ReflectionsKieVfsUrlType",
          "package": "org.optaplanner.core.config.domain",
          "classSimpleName": "ReflectionsKieVfsUrlType",
          "elementKind": "class",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.class.removed",
          "old": "class org.optaplanner.core.config.domain.ReflectionsWorkaroundClasspathHelper",
          "package": "org.optaplanner.core.config.domain",
          "classSimpleName": "ReflectionsWorkaroundClasspathHelper",
          "elementKind": "class",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.class.removed",
          "old": "class org.optaplanner.core.config.domain.ScanAnnotatedClassesConfig",
          "package": "org.optaplanner.core.config.domain",
          "classSimpleName": "ScanAnnotatedClassesConfig",
          "elementKind": "class",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.class.removed",
          "old": "class org.optaplanner.core.config.heuristic.policy.HeuristicConfigPolicy",
          "package": "org.optaplanner.core.config.heuristic.policy",
          "classSimpleName": "HeuristicConfigPolicy",
          "elementKind": "class",
          "justification": "Replaced."
        },
        {
          "code": "java.field.removed",
          "old": "field org.optaplanner.core.config.heuristic.selector.entity.pillar.PillarSelectorConfig.subPillarEnabled",
          "package": "org.optaplanner.core.config.heuristic.selector.entity.pillar",
          "classSimpleName": "PillarSelectorConfig",
          "fieldName": "subPillarEnabled",
          "elementKind": "field",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method java.lang.Boolean org.optaplanner.core.config.heuristic.selector.entity.pillar.PillarSelectorConfig::getSubPillarEnabled()",
          "package": "org.optaplanner.core.config.heuristic.selector.entity.pillar",
          "classSimpleName": "PillarSelectorConfig",
          "methodName": "getSubPillarEnabled",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.config.heuristic.selector.entity.pillar.PillarSelectorConfig::setSubPillarEnabled(java.lang.Boolean)",
          "package": "org.optaplanner.core.config.heuristic.selector.entity.pillar",
          "classSimpleName": "PillarSelectorConfig",
          "methodName": "setSubPillarEnabled",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.field.enumConstantOrderChanged",
          "old": "field org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorType.GREAT_DELUGE",
          "new": "field org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorType.GREAT_DELUGE",
          "oldOrdinal": "8",
          "newOrdinal": "7",
          "package": "org.optaplanner.core.config.localsearch.decider.acceptor",
          "classSimpleName": "AcceptorType",
          "fieldName": "GREAT_DELUGE",
          "elementKind": "enumConstant",
          "justification": "Solution tabu removed."
        },
        {
          "code": "java.field.enumConstantOrderChanged",
          "old": "field org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorType.LATE_ACCEPTANCE",
          "new": "field org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorType.LATE_ACCEPTANCE",
          "oldOrdinal": "7",
          "newOrdinal": "6",
          "package": "org.optaplanner.core.config.localsearch.decider.acceptor",
          "classSimpleName": "AcceptorType",
          "fieldName": "LATE_ACCEPTANCE",
          "elementKind": "enumConstant",
          "justification": "Solution tabu removed."
        },
        {
          "code": "java.field.enumConstantOrderChanged",
          "old": "field org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorType.SIMULATED_ANNEALING",
          "new": "field org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorType.SIMULATED_ANNEALING",
          "oldOrdinal": "6",
          "newOrdinal": "5",
          "package": "org.optaplanner.core.config.localsearch.decider.acceptor",
          "classSimpleName": "AcceptorType",
          "fieldName": "SIMULATED_ANNEALING",
          "elementKind": "enumConstant",
          "justification": "Solution tabu removed."
        },
        {
          "code": "java.field.removed",
          "old": "field org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorType.SOLUTION_TABU",
          "package": "org.optaplanner.core.config.localsearch.decider.acceptor",
          "classSimpleName": "AcceptorType",
          "fieldName": "SOLUTION_TABU",
          "elementKind": "enumConstant",
          "justification": "Solution tabu removed."
        },
        {
          "code": "java.field.enumConstantOrderChanged",
          "old": "field org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorType.STEP_COUNTING_HILL_CLIMBING",
          "new": "field org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorType.STEP_COUNTING_HILL_CLIMBING",
          "oldOrdinal": "9",
          "newOrdinal": "8",
          "package": "org.optaplanner.core.config.localsearch.decider.acceptor",
          "classSimpleName": "AcceptorType",
          "fieldName": "STEP_COUNTING_HILL_CLIMBING",
          "elementKind": "enumConstant",
          "justification": "Solution tabu removed."
        },
        {
          "code": "java.method.removed",
          "old": "method java.lang.Class<? extends org.optaplanner.core.impl.localsearch.decider.forager.LocalSearchForager> org.optaplanner.core.config.localsearch.decider.forager.LocalSearchForagerConfig::getForagerClass()",
          "package": "org.optaplanner.core.config.localsearch.decider.forager",
          "classSimpleName": "LocalSearchForagerConfig",
          "methodName": "getForagerClass",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.config.localsearch.decider.forager.LocalSearchForagerConfig::setForagerClass(java.lang.Class<? extends org.optaplanner.core.impl.localsearch.decider.forager.LocalSearchForager>)",
          "package": "org.optaplanner.core.config.localsearch.decider.forager",
          "classSimpleName": "LocalSearchForagerConfig",
          "methodName": "setForagerClass",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.field.removed",
          "old": "field org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.threadFactoryClass",
          "package": "org.optaplanner.core.config.partitionedsearch",
          "classSimpleName": "PartitionedSearchPhaseConfig",
          "fieldName": "threadFactoryClass",
          "elementKind": "field",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method java.lang.Class<? extends java.util.concurrent.ThreadFactory> org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig::getThreadFactoryClass()",
          "package": "org.optaplanner.core.config.partitionedsearch",
          "classSimpleName": "PartitionedSearchPhaseConfig",
          "methodName": "getThreadFactoryClass",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig::setThreadFactoryClass(java.lang.Class<? extends java.util.concurrent.ThreadFactory>)",
          "package": "org.optaplanner.core.config.partitionedsearch",
          "classSimpleName": "PartitionedSearchPhaseConfig",
          "methodName": "setThreadFactoryClass",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.field.removed",
          "old": "field org.optaplanner.core.config.phase.custom.CustomPhaseConfig.forceUpdateBestSolution",
          "package": "org.optaplanner.core.config.phase.custom",
          "classSimpleName": "CustomPhaseConfig",
          "fieldName": "forceUpdateBestSolution",
          "elementKind": "field",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method java.lang.Boolean org.optaplanner.core.config.phase.custom.CustomPhaseConfig::getForceUpdateBestSolution()",
          "package": "org.optaplanner.core.config.phase.custom",
          "classSimpleName": "CustomPhaseConfig",
          "methodName": "getForceUpdateBestSolution",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.config.phase.custom.CustomPhaseConfig::setForceUpdateBestSolution(java.lang.Boolean)",
          "package": "org.optaplanner.core.config.phase.custom",
          "classSimpleName": "CustomPhaseConfig",
          "methodName": "setForceUpdateBestSolution",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.field.removed",
          "old": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.bendableHardLevelsSize",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "fieldName": "bendableHardLevelsSize",
          "elementKind": "field",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.field.removed",
          "old": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.bendableSoftLevelsSize",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "fieldName": "bendableSoftLevelsSize",
          "elementKind": "field",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.field.removed",
          "old": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.generateDroolsTestOnError",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "fieldName": "generateDroolsTestOnError",
          "elementKind": "field",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.field.removed",
          "old": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.kieBase",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "fieldName": "kieBase",
          "elementKind": "field",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.field.removed",
          "old": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.ksessionName",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "fieldName": "ksessionName",
          "elementKind": "field",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.field.removed",
          "old": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.scoreDefinitionClass",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "fieldName": "scoreDefinitionClass",
          "elementKind": "field",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.field.removed",
          "old": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.scoreDefinitionType",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "fieldName": "scoreDefinitionType",
          "elementKind": "field",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method java.lang.Integer org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig::getBendableHardLevelsSize()",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "methodName": "getBendableHardLevelsSize",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method java.lang.Integer org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig::getBendableSoftLevelsSize()",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "methodName": "getBendableSoftLevelsSize",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method org.kie.api.KieBase org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig::getKieBase()",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "methodName": "getKieBase",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method java.lang.String org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig::getKsessionName()",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "methodName": "getKsessionName",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method java.lang.Class<? extends org.optaplanner.core.impl.score.definition.ScoreDefinition> org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig::getScoreDefinitionClass()",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "methodName": "getScoreDefinitionClass",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method org.optaplanner.core.config.score.definition.ScoreDefinitionType org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig::getScoreDefinitionType()",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "methodName": "getScoreDefinitionType",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig::setBendableHardLevelsSize(java.lang.Integer)",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "methodName": "setBendableHardLevelsSize",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig::setBendableSoftLevelsSize(java.lang.Integer)",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "methodName": "setBendableSoftLevelsSize",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig::setGenerateDroolsTestOnError(java.lang.Boolean)",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "methodName": "setGenerateDroolsTestOnError",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig::setKieBase(org.kie.api.KieBase)",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "methodName": "setKieBase",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig::setKsessionName(java.lang.String)",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "methodName": "setKsessionName",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig::setScoreDefinitionClass(java.lang.Class<? extends org.optaplanner.core.impl.score.definition.ScoreDefinition>)",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "methodName": "setScoreDefinitionClass",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig::setScoreDefinitionType(org.optaplanner.core.config.score.definition.ScoreDefinitionType)",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "methodName": "setScoreDefinitionType",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.field.enumConstantOrderChanged",
          "old": "field org.optaplanner.core.config.solver.EnvironmentMode.NON_REPRODUCIBLE",
          "new": "field org.optaplanner.core.config.solver.EnvironmentMode.NON_REPRODUCIBLE",
          "oldOrdinal": "5",
          "newOrdinal": "4",
          "package": "org.optaplanner.core.config.solver",
          "classSimpleName": "EnvironmentMode",
          "fieldName": "NON_REPRODUCIBLE",
          "elementKind": "enumConstant",
          "justification": "Removed PRODUCTION as previously deprecated."
        },
        {
          "code": "java.field.removed",
          "old": "field org.optaplanner.core.config.solver.EnvironmentMode.PRODUCTION",
          "package": "org.optaplanner.core.config.solver",
          "classSimpleName": "EnvironmentMode",
          "fieldName": "PRODUCTION",
          "elementKind": "enumConstant",
          "justification": "Removed PRODUCTION as previously deprecated."
        },
        {
          "code": "java.field.removed",
          "old": "field org.optaplanner.core.config.solver.SolverConfig.scanAnnotatedClassesConfig",
          "package": "org.optaplanner.core.config.solver",
          "classSimpleName": "SolverConfig",
          "fieldName": "scanAnnotatedClassesConfig",
          "elementKind": "field",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method org.optaplanner.core.config.domain.ScanAnnotatedClassesConfig org.optaplanner.core.config.solver.SolverConfig::getScanAnnotatedClassesConfig()",
          "package": "org.optaplanner.core.config.solver",
          "classSimpleName": "SolverConfig",
          "methodName": "getScanAnnotatedClassesConfig",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.config.solver.SolverConfig::setScanAnnotatedClassesConfig(org.optaplanner.core.config.domain.ScanAnnotatedClassesConfig)",
          "package": "org.optaplanner.core.config.solver",
          "classSimpleName": "SolverConfig",
          "methodName": "setScanAnnotatedClassesConfig",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method java.lang.Long org.optaplanner.core.config.solver.termination.TerminationConfig::getCalculateCountLimit()",
          "package": "org.optaplanner.core.config.solver.termination",
          "classSimpleName": "TerminationConfig",
          "methodName": "getCalculateCountLimit",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.config.solver.termination.TerminationConfig::setCalculateCountLimit(java.lang.Long)",
          "package": "org.optaplanner.core.config.solver.termination",
          "classSimpleName": "TerminationConfig",
          "methodName": "setCalculateCountLimit",
          "elementKind": "method",
          "justification": "Removed as previously deprecated."
        }
      ]
    }
  }
}
